services:
  frontend:
    image: "$DOCKER_USERNAME/anonymous_quotes_frontend:$TAG"
    container_name: react-frontend
    expose:
      - 80
    networks:
      - webnet
    restart: always

  backend:
    image: "$DOCKER_USERNAME/anonymous_quotes_backend:$TAG"
    container_name: python-backend
    expose:
      - 8000
    networks:
      - webnet
    environment:
      - SLACK_WEBHOOK=$SLACK_WEBHOOK
    restart: always

  db:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: $PG_USER
      POSTGRES_DB: quotes
      POSTGRES_PASSWORD: $PG_PASSWORD
    expose:
      - 5432
    volumes:
      - pg_data:/var/lib/postgreslq/data
    networks:
      - webnet


  nginx-gateway:
    image: nginx:alpine
    container_name: nginx-gateway
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/ubuntu/website/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /home/ubuntu/website/logs/nginx-access.log:/var/log/nginx/access.log
      - /home/ubuntu/website/nginx/certificates:/etc/letsencrypt
      - /home/ubuntu/website/nginx/certificates-data:/data/certbot
      - /home/ubuntu/website/nginx/.htpasswd:/etc/nginx/.htpasswd
    depends_on:
      - frontend
    networks:
      - webnet
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /home/ubuntu/website/nginx/certificates:/etc/letsencrypt
      - /home/ubuntu/website/nginx/certificates-data:/data/certbot
    entrypoint: >
      sh -c "
        while :; do
          certbot renew;
          sleep 12h & wait $${!};
        done"
    networks:
      - webnet
    restart: on-failure

volumes:
  pg_data:

networks:
  webnet:
